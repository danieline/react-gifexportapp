{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","atl","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","c","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEdC,mBAAS,IAFK,mBAE3CC,EAF2C,KAE/BC,EAF+B,KAoB9C,OACI,sBAAMC,SAbO,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IAGzBR,GAAe,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACtCN,EAAc,MAKd,SACG,uBACCO,KAAK,OACLC,MAAQT,EACRU,SArBY,SAACP,GACrBF,EAAeE,EAAEQ,OAAOF,a,+BCPfG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,kDAEoCC,UAAWH,GAF/C,gEAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcdM,GAdc,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAClC,OACI,sBAAKc,UAAU,yDAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCDJO,EAAU,SAAC,GAAkB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECDb,SAAEA,GAAe,IAAD,EAEVd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJuB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAoBpC,OAZAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIlB,CAACpB,IAEGqB,EDjBqBK,CAAc1B,GAAlCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAEpB,OACI,qCACA,6BAAMpB,IACJoB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAGYH,EAAOJ,KAAK,SAAAC,GAAG,OAChB,cAAC,EAAD,eAEKA,GADGA,EAAIC,aEdlBgB,EAAe,WAAO,IAAD,EAEEzC,mBAAS,CAAC,gBAFZ,mBAE3B0C,EAF2B,KAEf3C,EAFe,KAI9B,OACI,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI2C,EAAWnB,KAAK,SAAAoB,GAAC,OACV,cAAC,EAAD,CAEK7B,UAAc6B,GADNA,Y,MCZlCC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.9af08f04.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({ setCategorias }) => {\r\n\r\nconst [inputValue, setInputValue] = useState('');\r\n\r\nconst handleInputChange=(e) =>{\r\n    setInputValue( e.target.value);\r\n}\r\n\r\nconst handleSubmit = (e) =>{\r\n\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length>2)\r\n    {\r\n\r\n        setCategorias( cats=>[ inputValue, ...cats]);\r\n        setInputValue('');\r\n    }\r\n\r\n}\r\n    return (\r\n        <form onSubmit ={ handleSubmit } >\r\n           <input \r\n            type=\"text\"\r\n            value={ inputValue }\r\n            onChange={ handleInputChange}\r\n            \r\n            />\r\n           \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes= {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async(categoria) =>{\r\n    \r\n    const url =`https://api.giphy.com/v1/gifs/search?q= ${ encodeURI( categoria) } &limit=10&api_key=EnYi9PVlkPU3TdYVS39SaU8oRKcblgha`\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n  return gifs;\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n    return (\r\n        <div className='card animate__animated animate__bounce animate__fadeIn'>\r\n            <img src={ url } atl={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({categoria} ) => {\r\n\r\n    const {data:images, loading } = useFetchGifs( categoria );\r\n\r\n    return (\r\n        <>\r\n        <h3>{ categoria }</h3>\r\n        { loading && <p>Loading</p>}\r\n        <div className=\"card-grid\">\r\n         \r\n               { \r\n                    images.map( img =>(\r\n                   <GifGridItem \r\n                    key = {img.id}\r\n                    {...img} />\r\n                    ))\r\n                \r\n                }\r\n           \r\n        </div> \r\n        </>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\"\r\nimport { getGifs } from \"../components/helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( categoria ) =>{\r\n\r\n        const [state, setState] = useState({\r\n            data: [],\r\n            loading: true\r\n        }            \r\n        );\r\n\r\n        useEffect(()=>{\r\n            getGifs(categoria)\r\n            .then(imgs =>{\r\n               \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n            \r\n        }, [categoria])\r\n      \r\n        return state; \r\n\r\n        \r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\nconst [categorias, setCategorias] = useState(['Dragon Ball'])\r\n\r\n    return (\r\n        <>\r\n          <h2>GifExportApp</h2>  \r\n          <AddCategory setCategorias={setCategorias}/>\r\n          <hr/>\r\n          \r\n          <ol>\r\n            {\r\n              categorias.map( c => (\r\n                     <GifGrid \r\n                          key = { c }\r\n                          categoria = { c }\r\n                     />\r\n                ))\r\n            \r\n            }\r\n              \r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}